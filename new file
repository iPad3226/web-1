function evaluate(_str_){
    let flag=true
    let c
    let d
    let e
    while(flag){
        if(_str_.indexOf("(")===-1){flag=false;c=_str_;d='';e=''}else{
            let PL=[[0],[0]];
            let PR=[[0],[0]];
            let PMAX=0;
            let LR=0;
            for(let i=0;i<_str_.length;i++){
                if(_str_[i]==="("){
                    LR++;
                    PL[0].push(LR);
                    PL[1].push(i);
                }else if(_str_[i]===")"){
                    LR--;
                    PR[0].push(LR+1);
                    PR[1].push(i);
                }
                PMAX=PMAX<LR?LR:PMAX
            }
            if(LR!==0){return NaN}
            let a=PL[1][PL[0].indexOf(PMAX)]+1
            let b=PR[1][PR[0].indexOf(PMAX)]
            c=_str_.substr(a,b-a)
            d=_str_.substr(0,b-c.length-1)
            e=_str_.substr(b+1,_str_.length)
        }
        c=c.replaceAll("--","+");
        if(c[0]==="+"){c=c.substr(1,c.length)}
        let F='';
        for(let i=0;i<c.length;i++){
            if(c[i]!=="-"&&c[i]!=="."&&isNaN(parseFloat(c[i]))){
                F+=","+c[i]+","
            }else if(c[i]==="-"&&i!==0){
                F+=",+,"+c[i]
            }else{
                F+=c[i]
            }
        }
        let nF=F.replaceAll(",,+,",",").split(",");
        for(let o of ["^","/","*","+"]){
            while(nF.indexOf(o)>=0){
                let i=nF.indexOf(o);
                let a=parseFloat(nF[i-1]);
                let b=parseFloat(nF[i+1]);
                nF[i+1]=""+(o==="^"?Math.pow(a,b):o==="/"?a/b:o==="*"?a*b:o==="+"?a+b:NaN);
                nF.splice(i-1,2)
            }
        }
        let newstr = parseFloat(nF.join(""))
        _str_ = d+newstr+e
    }
    return parseFloat(_str_)
};
